{"version":3,"sources":["components/Header.js","components/Field/WinPanel.js","components/Field/Field.js","components/ControlPanel/ControlPanel.js","gameLogic/initCell.js","gameLogic/moveCells.js","gameLogic/increaseCell.js","gameLogic/populateField.js","App.js","index.js","logo.svg"],"names":["Header","react_default","a","createElement","className","src","logo","alt","WinPanel","styled","div","_templateObject","ContinueButton","button","_templateObject2","backCells","length","fill","FieldContainer","Field_templateObject","Background","Field_templateObject2","Playground","_templateObject3","BackgroundCell","_templateObject4","Cell","_templateObject5","_ref3","x","_ref4","y","_ref5","value","calculateBackgroundColor","_ref6","step","Math","min","log2","concat","calculateSaturation","calculateLightness","floor","Field","_ref","cells","isWin","continueGame","map","cell","i","key","onClick","_ref2","id","Container","ControlPanel_templateObject","Button","ControlPanel_templateObject2","Score","ControlPanel_templateObject3","ControlPanel","score","restartGame","cellState","MOVING","IDLE","DYING","INCREASE","getRandomNumber","max","random","createCell","generate","state","increased","getRandomCoordinate","initCells","cell1","cell2","directions","UP","DOWN","LEFT","RIGHT","moveCells","arguments","undefined","direction","cloneDeep","matrix","Array","from","forEach","matrixRotate","rotateMatrixFromDirection","moveCell","rotateMatrixToDirection","filter","by","nextRow","currentRow","populateField","occupiedCoords","Set","add","size","startSize","sum","Object","toConsumableArray","delay","ms","Promise","resolve","setTimeout","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","KeyCodeToDirection","37","38","39","40","getInitialState","isGameOver","setState","handleKeyUp","asyncToGenerator","regenerator_default","mark","_callee","keyCode","wrap","_context","prev","next","includes","objectSpread","calculateNewState","stop","_x","apply","increasedCells","increaseCell","reduce","prevScore","plusScore","some","document","addEventListener","_","prevState","removeEventListener","_this$state","components_Header","components_ControlPanel_ControlPanel","components_Field_Field","React","Component","ReactDOM","render","src_App_0","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9c072f95.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\n\nconst Header = () => (\n  <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" /> \n    <span>2048</span>\n  </header>\n);\n\nexport default Header;\n\n","import styled from 'styled-components'\n\nexport const WinPanel = styled.div`\n  background: rgba(252,234,187,.5);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  height: 450px;\n  position: absolute;\n  width: 450px;\n  padding: 5px;\n\n`;\n\nexport const ContinueButton = styled.button`\n  background: #bbada0;\n  color: #f9f6f2;\n  height: 20px;\n  margin: 10px;\n  cursor: pointer;\n  border-radius: 3px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 15px;\n`;","import React from 'react';\nimport styled from 'styled-components'\n\nimport { WinPanel, ContinueButton } from './WinPanel'\n\nconst backCells = [];\nbackCells.length = 16;\nbackCells.fill(null);\n\n\nconst Field = ({ cells, isWin, continueGame }) => (\n  <FieldContainer>\n    <Background>\n      {\n        backCells.map((cell, i) => <BackgroundCell key={i} />\n      )}               \n    </Background>\n\n   {isWin \n   ? (<WinPanel>\n       <p>You Win!</p>\n       <ContinueButton onClick={continueGame}>continue game</ContinueButton>\n     </WinPanel>) \n   \n   : (<Playground>\n        {cells.map(({ x, y, value, id }) => (\n            <Cell \n              key={id} \n              x={x} \n              y={y} \n              value={value}\n            >\n              {value}\n            </Cell>\n          ))}\n\n    </Playground>)}\n  </FieldContainer>\n);\n\n\nconst FieldContainer= styled.div`\n \n  margin-left: auto;\n  margin-right: auto;\n  height: 475px;\n  position: relative;\n  width: 475px;\n`;\n\nconst Background = styled.div`\n  align-content: space-between;\n  background-color: #bbada0;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  height: 450px;\n  justify-content: space-between;\n  padding: 5px;\n  position: absolute;\n  width: 450px;\n`;\n\nconst Playground = styled(Background)`\n  background-color: transparent;\n`\n\nconst BackgroundCell = styled.div`\n  margin: 5px;\n  background-color: rgba(238, 228, 218, 0.35);\n  height: 100px;\n  width: 100px;\n  border-radius: 5px;\n`;\n\nconst Cell = styled(BackgroundCell)`\n  \n  transform: translate(${({ x }) => x * 113}px, ${({ y }) => y * 113}px);\n  text-align: center;\n  line-height: 100px;\n  background-color: ${({ value }) => calculateBackgroundColor(value)};\n  position: absolute;\n  transition-property: transform;\n  transition: 100ms ease-in-out;\n  color: #6a4e4e;\n  font-weight: 900;\n  font-size: ${({ value }) =>\n    value < 100 ? 66\n      : value < 1000 ? 47\n        : value < 10000 ? 40\n          : 30}px;\n`;\n\nconst calculateBackgroundColor = value => {\n  if (value === 0) {\n    return 'transparent'\n  }\n  const step = Math.min(16, Math.log2(value))\n  return `hsl(0, ${calculateSaturation(step)}%, ${calculateLightness(step)}%);`\n}\nconst calculateSaturation = step => Math.floor(100 / 16 * step)\nconst calculateLightness = step => 100 - Math.floor(50 / 16 * step)\n\nexport default Field;","import React from 'react';\nimport styled from 'styled-components'\n\n\nconst ControlPanel = ({ score, restartGame }) => (\n  <Container>\n    <Button onClick={restartGame}>New Game</Button>\n     <Score> Score <p>{score}</p></Score>\n  </Container>\n);\n\n\nconst Container = styled.div`\n  display: flex;\n  margin-right: auto;\n  margin-left: auto;\n  justify-content: space-between;\n  align-items: center;\n  height: 100px;\n  width: 475px;\n\n`;\n\nconst Button = styled.button`\n  background: #8f7a66;\n  color: #f9f6f2;\n  height: 40px;\n  margin: 10px;\n  cursor: pointer;\n  border-radius: 3px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 25px;\n    :focus {\n      border: 1px solid #8f7a66;\n    }\n  \n`;\n\nconst Score = styled.div`\n  margin-top: 16px;\n  align-self: center;\n  position: relative;\n  display: inline-block;\n  background: #bbada0;\n  padding: 15px 25px;\n  font-size: 20px;\n  height: 25px;\n  line-height: 3px;\n  font-weight: bold;\n  border-radius: 3px;\n  color: white; \n  text-align: center;\n    \n`;\n\nexport default ControlPanel;","import { generate }  from 'randomstring';\n\nexport const cellState = {\n  MOVING: \"MOVING\",\n  IDLE: \"IDLE\",\n  DYING: \"DYING\",\n  INCREASE: \"INCREASE\",\n};\n\nexport const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\nexport const createCell = (x, y, value) => ({\n  x,\n  y, \n  value,\n  id: generate(16),\n  state: cellState.IDLE,\n  increased: false,\n}); \n\nconst getRandomCoordinate = () => {\n  return getRandomNumber(0, 4);\n}\n\nexport const initCells = () => {\n  const cell1 = createCell(getRandomCoordinate(), getRandomCoordinate(), 2);\n  const cell2 = createCell(getRandomCoordinate(), getRandomCoordinate(), 2);\n  \n  if (cell1.x === cell2.x && cell1.y === cell2.y) {\n    cell1.x = cell1.x === 0 ? 1 : cell1.x - 1\n  }\n\n  return [cell1, cell2];\n}\n\n","import matrixRotate from 'matrix-rotate';\nimport { cloneDeep } from 'lodash';\nimport { cellState } from './initCell';\n\nexport const directions = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  LEFT: 'LEFT',\n  RIGHT: 'RIGHT',\n}\n\nexport const moveCells = (initCells = [], direction) => {\n  const cells = cloneDeep(initCells);\n  const matrix = Array.from(new Array(4), () =>\n    Array.from(new Array(4), () => 0),\n  );\n\n  cells.forEach(cell => {\n    matrix[cell.y][cell.x] = cell\n  });\n\n  rotateMatrixFromDirection(matrix, direction);\n\n  for (let y = 0; y < 4; y++) {\n    for (let x = 0; x < 4; x++) {\n      if (matrix[y][x] === 0) continue;\n      moveCell(matrix, x, y); \n    }\n  }\n\n  rotateMatrixToDirection(matrix, direction);\n\n  for (let y = 0; y < 4; y++) {\n    for (let x = 0; x < 4; x++) {\n      if (matrix[y][x] === 0) continue;\n      matrix[y][x].y = y;\n      matrix[y][x].x = x;\n    }\n  }\n\n  cells\n    .filter(cell => cell.by != null) \n    .forEach(cell => {\n      cell.x = cell.by.x;\n      cell.y = cell.by.y;\n      delete cell.by;\n  })\n\n  return cells;\n\n\n}\n\nfunction moveCell(matrix, x, y) {\n  let nextRow = y - 1;\n  let currentRow = y;\n\n  while (nextRow >= 0) {\n    if (matrix[nextRow][x] === 0) {\n      matrix[nextRow][x] = matrix[currentRow][x]\n      matrix[currentRow][x].state = cellState.MOVING;\n      matrix[currentRow][x] = 0;\n\n      currentRow = nextRow;\n    } else if (\n      matrix[nextRow][x].value === matrix[currentRow][x].value &&\n      (matrix[nextRow][x].state === cellState.IDLE ||\n        matrix[nextRow][x].state === cellState.MOVING)\n    ) {\n      matrix[nextRow][x].state = cellState.DYING;\n      matrix[nextRow][x].by = matrix[currentRow][x];\n      matrix[currentRow][x].state = cellState.INCREASE;\n      matrix[nextRow][x] = matrix[currentRow][x];\n      matrix[currentRow][x] = 0;\n      currentRow = nextRow;\n    } else {\n      break;\n    }\n\n    nextRow -= 1;\n  }\n  \n};\n\nfunction rotateMatrixFromDirection(matrix, direction) {\n  switch (direction) {\n    case directions.LEFT:\n      matrixRotate(matrix);\n      break;\n    case directions.DOWN:\n      matrixRotate(matrix);\n      matrixRotate(matrix);\n      break;\n    case directions.RIGHT:\n      matrixRotate(matrix);\n      matrixRotate(matrix);\n      matrixRotate(matrix);\n      break;\n    default:\n      break;\n  }\n};\nfunction rotateMatrixToDirection(matrix, direction) {\n  switch (direction) {\n    case directions.LEFT:\n      matrixRotate(matrix);\n      matrixRotate(matrix);\n      matrixRotate(matrix);\n      break;\n    case directions.DOWN:\n      matrixRotate(matrix);\n      matrixRotate(matrix);\n      break;\n    case directions.RIGHT:\n      matrixRotate(matrix);\n      break;\n    default:\n      break;\n  }\n};\n\n","import { cellState } from './initCell'\n\nexport const increaseCell = (cells = []) => {\n  \n  return cells\n    .filter(cell => cell.state !== cellState.DYING)\n    .map(cell => {\n      if (cell.state === cellState.INCREASE) {\n        cell.value *= 2;\n        cell.increased = true;\n       }\n\n      cell.state = cellState.IDLE;\n\n      return cell;\n  })\n}\n","import { createCell, getRandomNumber } from './initCell';\n\n\nexport const populateField = cells => {\n  const occupiedCoords = new Set();\n  cells.forEach(cell => {\n    occupiedCoords.add(cell.x * 4 + cell.y);\n  });\n\n  if (occupiedCoords.size === 16) return;\n  let x;\n  let y;\n  let startSize = occupiedCoords.size;\n  do {\n    x = getRandomNumber(0, 4);\n    y = getRandomNumber(0, 4);\n\n    const sum = x * 4 + y;\n    occupiedCoords.add(sum);\n  } while (startSize === occupiedCoords.size);\n\n\n  return [...cells, createCell(x, y, 2)];\n}\n","import React from 'react';\n\nimport Header from './components/Header';\nimport Field from './components/Field/Field';\nimport ControlPanel from './components/ControlPanel/ControlPanel';\nimport { initCells } from './gameLogic/initCell';\nimport { directions } from './gameLogic/moveCells';\nimport { moveCells } from './gameLogic/moveCells';\nimport { increaseCell } from './gameLogic/increaseCell';\nimport { populateField } from './gameLogic/populateField';\n \n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState();\n  }\n\n  KeyCodeToDirection = {\n    '37': directions.LEFT,\n    '38': directions.UP,\n    '39': directions.RIGHT,\n    '40': directions.DOWN,\n  }\n  \n  getInitialState = () => ({\n    cells: initCells(),\n    score: 0,\n    isWin: false,\n    isGameOver: false,\n  })\n\n  calculateNewState(state) {\n    const increasedCells = increaseCell(state.cells);\n    const cellsWitIncreasedProp = increasedCells.filter(cell => cell.increased);\n    const score = cellsWitIncreasedProp.reduce((prevScore, plusScore) => prevScore + plusScore.value, state.score )      \n    const cells = increasedCells.map(cell => {\n      cell.increased = false\n      return cell;      \n    }); \n    const isWin = cells.some(cell => cell.value === 2048);\n\n    return {\n      ...state,\n      cells,\n      score,\n      isWin,\n      }\n  }\n\n  restartGame = () => {\n    this.setState(this.getInitialState());\n  }\n\n  continueGame = () => {\n    this.setState({isWin: false});\n  }\n  \n  handleKeyUp = async ({ keyCode }) => {\n    if(this.state.isGameOver) {\n      this.restartGame();\n\n    }\n\n    if ([37, 38, 39, 40].includes(keyCode)) {\n      this.setState(state => {\n        return {\n        ...state,\n        cells: moveCells(state.cells, this.KeyCodeToDirection[keyCode]),\n        }\n      })\n    }\n\n    await delay(100);\n    \n    this.setState(state => {\n      return this.calculateNewState(state)\n    });\n    this.setState(state => ({\n      ...state,\n      cells: populateField(state.cells),\n      isGameOver: !populateField(state.cells) ? true : false,\n    }));\n    \n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (prevState.isGameOver && !this.state.isGameOver) document.addEventListener('keyup', this.handleKeyUp);\n    \n    if (!prevState.isGameOver && this.state.isGameOver) document.removeEventListener('keyup', this.handleKeyUp);\n\n  }\n\n  componentWillMount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  render() {\n    const { cells, score, isGameOver, isWin } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <ControlPanel score={score} restartGame={this.restartGame} />\n        {isGameOver \n          ? <h1>Game Over</h1> \n          : <Field cells={cells} isWin={isWin} continueGame={this.continueGame}  \n        />}\n      </div>\n    );  \n  \n  }\n}\n\n\nexport default App;\n","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App  />, \n    document.getElementById('root')\n  );\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}